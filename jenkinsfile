pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M2_HOME" and add it to the path.
        maven "M2_HOME"
    }

    environment {
        NEXUS_URL = 'http://192.168.43.254:8081'
        NEXUS_REPOSITORY_ID = 'deploymentRepo'
        NEXUS_REPOSITORY_URL = 'http://192.168.43.254:8081/repository/maven-releases'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: 'https://github.com/wajdi-HUB/testDevopsRepo.git']]])
            }
        }

        stage('Maven Version') {
            steps {
                sh 'mvn --version'
            }
        }

        stage('Maven Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Maven Clean Install') {
            steps {
                sh 'mvn clean install'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Clean Verify') {
            steps {
                sh 'mvn clean verify'
            }
        }

        stage('Test JUnit') {
            steps {
                sh 'mvn test'
            }
        }

       

        stage('Publish to Nexus Repository Manager') {
            steps {
                sh "mvn deploy -DaltDeploymentRepository=${NEXUS_REPOSITORY_ID}::default::${NEXUS_REPOSITORY_URL} -s /usr/share/maven/conf/settings.xml"
            }
        }

        stage('Build Image') {
            steps {
                script {
                    sh 'docker build -t wajdiihassyaoui/tpachatproject .'
                }
            }
        }

        stage('Push Image to Hub') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {
                        sh 'docker login -u wajdiihassyaoui -p ${dockerhubpwd}'
                        sh 'docker push wajdiihassyaoui/tpachatproject'
                    }
                }
            }
        }

        stage('Deployment with Docker Compose') {
            steps {
                sh 'docker-compose up -d'
            }
        }

        stage('Verification Status') {
            steps {
                sh 'docker-compose ps'
            }
        }
    }

    post {
        success {
            jacoco()
            junit '**/target/surefire-reports/TEST-*.xml'
            archiveArtifacts 'target/*.jar'
        }
    }
}
